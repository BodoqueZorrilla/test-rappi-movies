//
//  MovieDetailWorker.swift
//  test-rappi-movies
//
//  Created by Sergio Zorrilla Arellano on 15/04/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the iOS team Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//

import UIKit
import RxSwift

class MovieDetailWorker {
    private let disposeBag = DisposeBag()

    func getMovieDetail(movieId: Int, completion: @escaping (MovieDetail.FetchDetailMovie.Response) -> Void) {
        let request =  APIRequest()
        request.completeUrl = "movie/\(movieId)"
        let result : Observable<ReponseDetailMovie> = APIService.apiCalling.getMovieDetail(apiRequest: request)
        result.subscribe(
            onNext: { result in
                let response = MovieDetail.FetchDetailMovie.Response(reponseDetailMovie: result)
                completion(response)
            },
            onError: { error in
                print(error.localizedDescription)
            }).disposed(by: disposeBag)
    }

    func getMovieVideo(movieId: Int, completion: @escaping (MovieVideo) -> Void) {
        let request =  APIRequest()
        request.completeUrl = "movie/\(movieId)/videos"
        let result : Observable<MovieVideo> = APIService.apiCalling.getMovieVideo(apiRequest: request)
        result.subscribe(
            onNext: { result in
                completion(result)
            },
            onError: { error in
                print(error.localizedDescription)
            }).disposed(by: disposeBag)
    }
}
