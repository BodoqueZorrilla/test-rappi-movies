//
//  HomeInteractor.swift
//  test-rappi-movies
//
//  Created by Sergio Zorrilla Arellano on 11/04/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the iOS team Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//

import Foundation
import RxDataSources


protocol HomeBusinessLogic {
    func getMovies(request: Home.FetchMovieScene.Request)
    func getMoviesOffline(section: String)
    func getMoviesSearch(query: String, isOnline: Bool)
    func saveCacheMovies(request: Home.FetchMovieScene.ViewModel)
}

class HomeInteractor: Interactor, HomeBusinessLogic {
    
    lazy var presenter: HomePresentationLogic = {
        return self._presenter as! HomePresentationLogic
    }()
    var worker: HomeWorkerInterface = HomeWorker()
    
    func getMovies(request: Home.FetchMovieScene.Request) {
        self.worker.getMovies(completeUrl: request.completeUrl) { response in
            self.presenter.presentMovies(section: request.type, response: response)
        }
    }

    func getMoviesSearch(query: String, isOnline: Bool) {
        if isOnline {
            self.worker.getMoviesSearch(completeUrl: query) { response in
                self.presenter.presentMoviesSearch(response: response)
            }
        } else {
            self.worker.getMoviesSearchOffline(query: query) { response in
                self.presenter.presentMoviesSearch(response: response)
            }
        }
    }

    func getMoviesOffline(section: String) {
        self.worker.getMoviesOffline(section: section) { response in
            self.presenter.presentMovies(section: Home.SectionsTitle(rawValue: section) ?? .popular, response: response)
        }
    }

    func saveCacheMovies(request: Home.FetchMovieScene.ViewModel){
        var voMovies = [VOMovie]()
        request.playingMovies?.forEach { movie in
            var image = ""
            if let imagePath = movie.posterPath {
                let url = URL(string: "\(APIStrings.imagesURL)\(imagePath)")
                var theImage = UIImage()
                if let data = try? Data(contentsOf: url!) {
                    theImage = UIImage(data: data) ?? UIImage(systemName: "heart.fill")!
                    image = theImage.toBase64()
                }
            }
            
            voMovies.append(VOMovie(id: Int64(movie.id ?? 0),
                                    title: movie.title ?? "",
                                    overview: movie.overview ?? "",
                                    date: "",
                                    voteAverage: movie.voteAverage ?? 0.0,
                                    genders: "",
                                    image: image,
                                    section: request.section.rawValue))
        }
        CoreDataMovieManager.shared.saveMovies(voMovies)
    }
}
