//
//  HomeModels.swift
//  test-rappi-movies
//
//  Created by Sergio Zorrilla Arellano on 11/04/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the iOS team Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//

import UIKit
import RxDataSources

enum Home {
    
    enum FetchMovieScene {
        
        struct Request {}
        
        struct Response {
            var playingMovies: ReponseMainMovies?
        }
        
        struct ViewModel {
            var playingMovies: [ResultsMovies]?
        }
    }
    
}


struct ReponseMainMovies: Codable {
    var dates: DatesMovies?
    var page: Int?
    var results: [ResultsMovies]?
    var totalPages: Int?
    var totalResults: Int?

    private enum CodingKeys: String, CodingKey {
        case dates
        case page
        case results
        case totalPages = "total_pages"
        case totalResults = "total_results"
    }
}

struct DatesMovies: Codable {
    var maximum: String?
    var minimum: String?
}

struct AllMovies {
    var name: String?
    var movies: [Item]?
}


extension AllMovies: SectionModelType {
    var items: [ResultsMovies] {
        return movies ?? [ResultsMovies]()
    }
    
    typealias Item  = ResultsMovies
    
    init(original: AllMovies, items: [Item]) {
        self = original
        self.movies = items
    }
}

struct ResultsMovies: Codable, Equatable {
    var adult: Bool?
    var backdropPath: String?
    var firstAirDate: String?
    var genreIds: [Int]?
    var id: Int?
    var originCountry: [String]?
    var originalLanguage: String?
    var originalTitle: String?
    var originalName: String?
    var overview: String?
    var popularity: Double?
    var posterPath: String?
    var releaseDate: String?
    var title: String?
    var video: Bool?
    var voteAverage: Double?
    var voteCount: Int?

    private enum CodingKeys: String, CodingKey {
        case adult
        case backdropPath = "backdrop_path"
        case firstAirDate = "first_air_date"
        case genreIds = "genre_ids"
        case id
        case originCountry = "origin_country"
        case originalLanguage = "original_language"
        case originalTitle = "original_title"
        case originalName = "original_name"
        case overview
        case popularity
        case posterPath = "poster_path"
        case releaseDate = "release_date"
        case title
        case video
        case voteAverage = "vote_average"
        case voteCount = "vote_count"
    }
}
